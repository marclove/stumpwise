# Copyright (c) 2010-2011 ProgressBound, Inc.
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

require "autotest/restart"
require 'autotest/fsevent'
require 'redgreen/autotest'
require 'autotest/growl'

Autotest::Growl::hide_label = true
Autotest.add_hook :initialize do |at|
  
  at.add_exception %r%^\./(?:db|doc|log|public|script|tmp|vendor)%
  
  at.clear_mappings
  
=begin
  at.self.add_mapping(/^lib\/.*\.rb$/) do |filename, _|
    impl = File.basename(filename, '.rb')
    at.files_matching %r%^test/unit/#{impl}_test.rb$%
    # TODO: (unit|functional|integration) maybe?
  end
=end
  
  at.add_mapping %r%^test/fixtures/(.*)s.yml% do |_, m|
    ["test/unit/#{m[1]}_test.rb",
     "test/unit/drops/#{m[1]}_drop_test.rb", # custom
     "test/functional/#{m[1]}_controller_test.rb"]
  end
  
  at.add_mapping %r%^test/(unit|integration|functional)/.*rb$% do |filename, _|
    filename
  end
  
  at.add_mapping %r%^app/models/(.*)\.rb$% do |_, m|
    ["test/unit/#{m[1]}_test.rb",
     "test/unit/drops/#{m[1]}_drop_test.rb"] # custom
  end
  
  at.add_mapping %r%^app/helpers/(.*)_helper.rb% do |_, m|
    at.files_matching %r%^test/functional/.*_test\.rb$%
  end
  
  at.add_mapping %r%^app/views/(.*)/% do |_, m|
    "test/functional/#{m[1]}_controller_test.rb"
  end
  
  at.add_mapping %r%^app/controllers/(.*)\.rb$% do |_, m|
    if m[1] == "application" then
      at.files_matching %r%^test/functional/.*_test\.rb$%
    else
      "test/functional/#{m[1]}_test.rb"
    end
  end
  
  at.add_mapping %r%^config/routes.rb$% do
    at.files_matching %r%^test/functional/.*_test\.rb$%
  end
  
  at.add_mapping %r%^test/test_helper.rb|test/blueprints.rb|test/factories.rb|config/((boot|environment(s/test)?).rb|database.yml)% do # custom
    at.files_matching %r%^test/(unit|functional)/.*_test\.rb$%
  end

  at.add_mapping %r%^lib/stumpwise/liquid/tags/(.*)\.rb$% do |_, m|
    "test/unit/helpers/liquid_tags_test.rb"
  end
  
  at.add_mapping %r%^lib/stumpwise/liquid/filters\.rb$% do |_, m|
    "test/unit/helpers/liquid_filters_test.rb"
  end
  
  at.add_mapping %r%^app/drops/base_drop.rb$% do
    at.files_matching %r%^test/unit/drops/.*_test\.rb$%
  end
  
  at.add_mapping %r%^app/drops/(.*)\.rb$% do |_, m|
    "test/unit/drops/#{m[1]}_test.rb"
  end
  
  at.add_mapping %r%^lib/stumpwise/domains\.rb$% do |_, m|
    at.files_matching %r%^test/functional/.*_test\.rb$%
  end
  
  at.add_mapping %r%^lib/stumpwise/liquid/liquid_template\.rb$% do |_, m|
    ["test/functional/stumpwise_controller_test.rb",
     "test/unit/site_test.rb"]
  end
end
